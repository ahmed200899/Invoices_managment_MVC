@model InvoiceApp.Models.CreateInvoiceViewModel
@Html.ValidationSummary()

@{
    ViewBag.Title = "Add Invoice";
    Layout = "~/Views/Shared/_Layout.cshtml";

}


<h2>Add Invoice</h2>

@using (Html.BeginForm())
{
    @Html.ValidationSummary()

    <div>
        <label for="Customer">Customer:</label>
        @Html.EditorFor(model => model.Invoice.Customer, new { htmlAttributes = new { id = "Invoice_Customer" } })
    </div>
    <div>
        <label for="Id">Id:</label>
        @Html.EditorFor(model => model.Invoice.Id, new { htmlAttributes = new { id = "Invoice_Id" } })
    </div>
    <div>
        <label for="InvoiceDate">InvoiceDate:</label>
        @Html.EditorFor(model => model.Invoice.InvoiceDate, new { htmlAttributes = new { id = "Invoice_InvoiceDate" } })
    </div>

    <div class="form-group">

        <label for="SelectedItemIds">Select Items:</label>
        @Html.DropDownListFor(model => model.AvailableItems,ViewBag.groceryItems as SelectList,  new { @class = "form-control", @onChange  =  "SelectedValue(this)"} )

        <label for "itemprice"> Item Price</label>
        <input type="text" id="ItemPrice" class="form-control" readonly> 

        <label for="amount">Amount:</label>
        @Html.EditorFor(model => model.InvoiceItems.Amount, new { htmlAttributes = new { @class = "form-control", id = "Amount", onchange = "UpdatePrice()" } })

        <label for "Price"> Price</label>
        <input type="text" id="Price" class="form-control" readonly> 
    </div>

    <button type="Button" id="Addtotablebutton" onclick="AddToTable()"> Add Item </button>

    <table id="itemTable" class="table">
        <thead>
            <tr>
                <th>Item</th>
                <th>Amount</th>
                <th>Price</th>
            </tr>
        </thead>
        <tbody>
        </tbody>
    </table>
    <div id="totalprice" class="total-price">Total Price: 0.00</div>


    <button type="button" id="SaveInvoiceButton" >Save Invoice</button>

    

    
}

<style>

    .form-control 
    {
        width: 170px; 
        height: 35px; 
        font-size: 14px; 
        display: inline-block;
        margin-right: 10px;
    }

    #ItemPrice 
    {
        width: 80px;
    }

    .total-price
    {
        font-size: 16px;
        font-weight: bold;        
    }

</style>



<script>
    var itemsList = @Html.Raw(Json.Serialize(ViewBag.itemslist));
</script>
  

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script type="text/javascript">

    var itemPriceValue = 0;
    var totalPrice = 0; 
    var viewState = {
    selectedId: null
};

    function SelectedValue(selecteditem) 
    {
        var selecteditemname = selecteditem.options[selecteditem.selectedIndex].innerHTML;
        viewState.selectedId = selecteditem.value;
        var targetItem = itemsList.find(function(item) {
            return item.id === parseInt(viewState.selectedId);
        });
        var selectedprice = parseFloat(targetItem.itemprice);

        document.getElementById("ItemPrice").value = selectedprice;
        itemPriceValue = parseFloat(selectedprice);
        UpdatePrice(); 
        window.selectedItemName = selecteditemname;
    }


    function UpdatePrice() 
    {
        var amount = parseFloat(document.getElementById("Amount").value);
        var Price = amount * itemPriceValue; 
        document.getElementById("Price").value = Price.toFixed(2); 
    }



    window.onload = function () 
     {
        var amountInput = document.getElementById("Amount");
        if (amountInput.value === "") {
            amountInput.value = 1;
        }
     }; 



    function AddToTable() 
    {
        var amount = parseFloat(document.getElementById("Amount").value);
        var Price = parseFloat(document.getElementById("Price").value);

        var tableBody = document.getElementById("itemTable").getElementsByTagName("tbody")[0];
        var newRow = tableBody.insertRow();
        var cell1 = newRow.insertCell(0);
        var cell2 = newRow.insertCell(1);
        var cell3 = newRow.insertCell(2);
        cell1.innerHTML = window.selectedItemName; 

        cell2.innerHTML = amount;
        cell3.innerHTML = Price.toFixed(2);

        document.getElementById("Amount").value = 1;
        document.getElementById("Price").value = itemPriceValue.toFixed(2);
        totalPrice += Price; 
        UpdateTotalprice(); 

        document.getElementById("Amount").value = 1;
        document.getElementById("Price").value = itemPriceValue.toFixed(2);
    }



    function UpdateTotalprice() 
    {
        var totalpriceElement = document.getElementById("totalprice");
        totalpriceElement.innerHTML = "Total Price: " + totalPrice.toFixed(2);
    }



    $(document).ready(function () 
    {
        $("#SaveInvoiceButton").click(function () 
        {
            var totalprice =totalPrice
            var customer = $("#Invoice_Customer").val();
            var id = $("#Invoice_Id").val();
            var invoiceDate = $("#Invoice_InvoiceDate").val();
            var invoiceItems = [];


            var tableBody = document.getElementById("itemTable").getElementsByTagName("tbody")[0];
            var rows = tableBody.getElementsByTagName("tr");
            for (var i = 0; i < rows.length; i++) {
                var cells = rows[i].getElementsByTagName("td");
                var item_Name = cells[0].innerHTML;
                var amount = parseFloat(cells[1].innerHTML);
                var item_price = parseFloat(cells[2].innerHTML);
                var ItemId = viewState.selectedId;
                console.log(ItemId)
                var invoiceItem = {
                    InvoiceId: id, 
                    Amount: amount,
                    item_Name:item_Name                
                    };

                invoiceItems.push(invoiceItem);
            }
            console.log(invoiceItems);

            $.ajax
            ({
                url: "/Invoice/AddInvoice",
                type: "POST",
                data: 
                    {
                        totalprice: totalprice,
                        Customer: customer,
                        Id :id,
                        InvoiceDate: invoiceDate,
                        invoiceItems:invoiceItems
                    }


            });
        });
    });



</script>


@Html.ActionLink("Back to List", "Index")
