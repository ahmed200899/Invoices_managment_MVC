@model InvoiceApp.Models.viewmodel

@{
    ViewBag.Title = "Edit Invoice";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit Invoice</h2>

@using (Html.BeginForm())
{
    @Html.ValidationSummary()

    @Html.HiddenFor(model => model.invoice.Id)

    <div>
        <label for="Customer">Customer:</label>
        @Html.EditorFor(model => model.invoice.Customer, new { htmlAttributes = new { id = "Invoice_Customer" } })
    </div>
    <div>
        <label for="InvoiceDate">InvoiceDate:</label>
        @Html.EditorFor(model => model.invoice.InvoiceDate, new { htmlAttributes = new { id = "Invoice_InvoiceDate" } })
    </div>


    <table id="itemTable" class="table">
        <thead>
            <tr>
                <th>Item</th>
                <th>Amount</th>
                <th>Price</th>
            </tr>
        </thead>
        <tbody>
            @{
                int j = 0; 
            }
            @foreach (var invoice in @Model.invoiceiteme)
            {
                var itemid = invoice.ItemId;
                var itemprice = (Model.items.FirstOrDefault(i => i.Id == invoice.ItemId).itemprice) * invoice.Amount;
                var item = Model.items.FirstOrDefault(i => i.Id == invoice.ItemId);
                var totalitemprice = itemprice *  invoice.Amount;

                <tr>
                    <td>
                        @Html.DropDownListFor(m => m.SelectedValue, (SelectList)ViewBag.GroceryItems2, new { @id = "myDropdown-" + @j,@class = "dynamic-dropdown" })
                        <script>
                            var dropdown = document.getElementById('myDropdown-@j');
                            console.log(dropdown);
                            console.log(dropdown.options)
                            for (var i = 0; i < dropdown.options.length; i++) 
                            {
                                if (parseInt(dropdown.options[i].value) === @itemid)
                                 {
                                    dropdown.selectedIndex = i;
                                    break;
                                }
                            }

                        </script>
                    </td>
                    <td>
                        @Html.EditorFor(model => invoice.Amount, new { htmlAttributes = new { @class = "Amount", id = "Amount-"+@j } })
                    </td>
                    <td>
                        <input type="text" id="ItemPrice-@j" class="Price" value= "@itemprice " readonly>
                    </td>

                </tr>
                j = j + 1;
            }


        </tbody>
    </table>


    <div>
        <label for="TotalPrice">TotalPrice:</label>
        <input type="text" id="TotalPrice" class="form-control" value="@Model.invoice.TotalPrice" readonly>
    </div>


    <button type="button" id="SaveInvoiceButton" >Save Changes</button>
}

@Html.ActionLink("Back to List", "Index")

<style>

    .form-control 
    {
        width: 170px; 
        height: 35px; 
        font-size: 14px; 
        display: inline-block;
        margin-right: 10px;
    }

    #ItemPrice 
    {
        width: 80px;
    }

    .total-price
    {
        font-size: 16px;
        font-weight: bold;        
    }

</style>

<script>
    var itemsList2 = @Html.Raw(Json.Serialize(ViewBag.itemslist2));

</script>
  

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script type="text/javascript">

    var viewState = 
    {
        selectedId: null,
        selected_price:null,
        price_boxes :[],
        totalPrice:null
    };


    function createEventListener(dropdown, i_d) 
    {
        return function() {
            const input = i_d;
            const startIndex = input.indexOf('-') + 1;
            const integerPartString = input.substring(startIndex);

            const integerValue = parseInt(integerPartString, 10);
            var index = integerValue;
            Selected(dropdown, index);
        };
    }

    var dropdowns = document.querySelectorAll(".dynamic-dropdown"); 
    dropdowns.forEach(function(dropdown) 
    {
        var i_d = dropdown.id;
        dropdown.addEventListener("change", createEventListener(dropdown, i_d));
    });





    function createEventListeneramount(amounttext, amounttext_d) 
    {
        return function() 
        {
            const input = amounttext_d;
            const startIndex = input.indexOf('-') + 1;
            const integerPartString = input.substring(startIndex);

            const integerValue = parseInt(integerPartString, 10);
            var index = integerValue;
            var myDropdown= "myDropdown-"+index;
            dropdown = document.getElementById(myDropdown);

            Update_Price(dropdown, index);
        };
    }

    var amounttexts = document.querySelectorAll(".Amount"); 
    amounttexts.forEach(function(amounttext) 
    {
        var amounttext_d = amounttext.id;

        amounttext.addEventListener("change", createEventListeneramount(amounttext, amounttext_d)); 
    });



    function update_totalprice() 
    {
        var price_boxes = document.querySelectorAll(".Price"); 

        price_boxes.forEach(function(pricebox) {
            var priceboxid = pricebox.id;

            box_price = document.getElementById(priceboxid).value;

            viewState.price_boxes.push(parseFloat(box_price));
        });
    }


    function Selected(dropdown, index) {
        Update_Price(dropdown,index);
        update_totalprice();
        var total = 0 
        for (i = 0 ; i<viewState.price_boxes.length; i++)
        {
            total = total + viewState.price_boxes[i];
        }
        console.log(total);
        document.getElementById("TotalPrice").value = total.toString(); 
        viewState.price_boxes = [];
        viewState.totalPrice = total;

    }


    function Update_Price(dropdown,index) 
    {
        getselectedprice(dropdown,index)
        var amount = parseFloat(document.getElementById("Amount-"+index).value);
        var Price = amount * viewState.selected_price; 
        document.getElementById('ItemPrice-' + index).value = Price.toFixed(2); 
        update_totalprice();

        var total = 0 
        for (i = 0 ; i<viewState.price_boxes.length; i++)
        {
            total = total + parseInt(viewState.price_boxes[i]);
        }
        document.getElementById("TotalPrice").value = total.toString(); 
        viewState.price_boxes = [];
        viewState.totalPrice = total;

    }

    
    function getselectedprice(dropdown,index) 
    {

        var dropdown = dropdown;
        viewState.selectedId = dropdown.value;
        var targetItem = itemsList2.find(function(item) {
            return item.id === parseInt(viewState.selectedId);
        });
        viewState.selected_price = parseFloat(targetItem.itemprice);
    }






$(document).ready(function () 
    {
        $("#SaveInvoiceButton").click(function () 
        {
            var totalprice =viewState.totalPrice
            var customer = $("#Invoice_Customer").val();
            var id = @ViewBag.i_nvoice_id;
            var invoiceDate = $("#Invoice_InvoiceDate").val();
            var invoiceItems = [];


            var tableBody = document.getElementById("itemTable").getElementsByTagName("tbody")[0];
            var rows = tableBody.getElementsByTagName("tr");
            var invoiceItems = [];

            for (var i = 0; i < rows.length; i++) {
                var cells = rows[i].getElementsByTagName("td");

                var item_Name = cells[0].getElementsByTagName("select")[0].options[cells[0].getElementsByTagName("select")[0].selectedIndex].text;
                var amount = parseFloat(cells[1].getElementsByTagName("input")[0].value);
                var item_price = parseFloat(cells[2].getElementsByTagName("input")[0].value);

                var invoiceItem = {
                    InvoiceId: id,
                    Amount: amount,
                    item_Name: item_Name,
                };

                invoiceItems.push(invoiceItem);
            }



            console.log(invoiceItems);

            $.ajax
            ({
                url: "/Invoice/Edit",
                type: "POST",
                data: 
                    {
                        totalprice: totalprice,
                        Customer: customer,
                        Id :@ViewBag.i_nvoice_id,
                        InvoiceDate: invoiceDate,
                        invoiceItems: invoiceItems
                    },
                        success: function (response) {
                            console.log("Response received:", response);

                         //   window.location.href = "http://localhost:5002/Invoice/Index";
                        },
                    error: function (xhr, status, error) {
                        console.error(error);
                    }


            });
        });
    });








</script>
